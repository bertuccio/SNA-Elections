install.packages("ggmap")
clean.text = function(txtclean)
{
# remueve retweets
txtclean = gsub("(RT|via)((?:\\b\\W*@\\w+)+)", " ", txtclean)
# remove @otragente
txtclean = gsub("@\\w+", " ", txtclean)
#remueve hashtags
txtclean = gsub("#\\S+", " ", txtclean)
# remueve links
txtclean = gsub("htt\\S+", " ", txtclean)
# remueve simbolos de puntuacion
txtclean = gsub("\\n", " ", txtclean,fixed = TRUE)
# remueve simbolos de puntuacion
txtclean = gsub("\\r", " ", txtclean,fixed = TRUE)
# remueve simbolos de puntuacion
txtclean = gsub("\\t", " ", txtclean,fixed = TRUE)
txtclean = gsub("[^[:alnum:][:space:]']", " ", txtclean)
# remove numeros
txtclean = gsub("[[:digit:]]", " ", txtclean)
# remove blank spaces at the beginning
txtclean = gsub("^ ", "", txtclean)
# remove blank spaces at the end
txtclean = gsub(" $", "", txtclean)
return(txtclean)
}
setwd("/home/pinwi/workspace/SNAElections")
# connect to the sqlite file
con = dbConnect(drv=RSQLite::SQLite(), dbname="twitterdb.db")
# get a list of all tables
# alltables = dbListTables(con)
# dbListFields(con, "Tweets")
# print(alltables)
ptm <- proc.time()
tweets = dbGetQuery( con,'select CAST(id as TEXT) as id, replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace( lower(text), \'á\',\'a\'), \'Á\',\'a\'), \'à\',\'a\'), \'À\',\'a\'), \'è\',\'e\'), \'é\',\'e\'), \'È\',\'e\'),\'É\',\'e\'),\'Ì\',\'i\'),\'í\',\'i\'),\'Í\',\'i\'),\'ì\',\'i\'),\'ó\',\'o\') ,\'ò\',\'o\'),\'Ó\',\'o\') ,\'Ò\',\'o\') ,\'ú\',\'u\'), \'ù\',\'u\') ,\'Ú\',\'u\'), \'Ù\',\'u\') as text, 	strftime(\'%Y-%m-%d %H:%M:%S\',created_at/1000,\'unixepoch\') as created, CAST(retweet_id as TEXT) as retweet_id, CAST(quoted_user_id as TEXT) as quoted_user_id from tweets' )
tweets$id = as.numeric(tweets$id)
tweets$retweet_id = as.numeric(tweets$retweet_id)
tweets$quoted_user_id = as.numeric(tweets$quoted_user_id)
proc.time() - ptm
# Install
#install.packages("tm")  # for text mining
#install.package("SnowballC") # for text stemming
#install.packages("wordcloud") # word-cloud generator
#install.packages("RColorBrewer") # color palettes
# install.packages("irlba") # for sparseMatrix
# install.packages("RSQLite")
# install.packages("plyr")
# install.packages("stringr")
# install.packages("ggplot2")
# install.packages("lubridate")
# install.packages("dplyr")
# install.packages("rJava")
# install.packages("syuzhet")
# Load
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
library("irlba")
library("plyr")
library(ggplot2)
library(RSQLite)
library(lubridate)
library(scales)
library(doBy)
clean.text = function(txtclean)
{
# remueve retweets
txtclean = gsub("(RT|via)((?:\\b\\W*@\\w+)+)", " ", txtclean)
# remove @otragente
txtclean = gsub("@\\w+", " ", txtclean)
#remueve hashtags
txtclean = gsub("#\\S+", " ", txtclean)
# remueve links
txtclean = gsub("htt\\S+", " ", txtclean)
# remueve simbolos de puntuacion
txtclean = gsub("\\n", " ", txtclean,fixed = TRUE)
# remueve simbolos de puntuacion
txtclean = gsub("\\r", " ", txtclean,fixed = TRUE)
# remueve simbolos de puntuacion
txtclean = gsub("\\t", " ", txtclean,fixed = TRUE)
txtclean = gsub("[^[:alnum:][:space:]']", " ", txtclean)
# remove numeros
txtclean = gsub("[[:digit:]]", " ", txtclean)
# remove blank spaces at the beginning
txtclean = gsub("^ ", "", txtclean)
# remove blank spaces at the end
txtclean = gsub(" $", "", txtclean)
return(txtclean)
}
setwd("/home/pinwi/workspace/SNAElections")
# connect to the sqlite file
con = dbConnect(drv=RSQLite::SQLite(), dbname="twitterdb.db")
# get a list of all tables
# alltables = dbListTables(con)
# dbListFields(con, "Tweets")
# print(alltables)
ptm <- proc.time()
tweets = dbGetQuery( con,'select CAST(id as TEXT) as id, replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace( lower(text), \'á\',\'a\'), \'Á\',\'a\'), \'à\',\'a\'), \'À\',\'a\'), \'è\',\'e\'), \'é\',\'e\'), \'È\',\'e\'),\'É\',\'e\'),\'Ì\',\'i\'),\'í\',\'i\'),\'Í\',\'i\'),\'ì\',\'i\'),\'ó\',\'o\') ,\'ò\',\'o\'),\'Ó\',\'o\') ,\'Ò\',\'o\') ,\'ú\',\'u\'), \'ù\',\'u\') ,\'Ú\',\'u\'), \'Ù\',\'u\') as text, 	strftime(\'%Y-%m-%d %H:%M:%S\',created_at/1000,\'unixepoch\') as created, CAST(retweet_id as TEXT) as retweet_id, CAST(quoted_user_id as TEXT) as quoted_user_id from tweets' )
tweets$id = as.numeric(tweets$id)
tweets$retweet_id = as.numeric(tweets$retweet_id)
tweets$quoted_user_id = as.numeric(tweets$quoted_user_id)
proc.time() - ptm
