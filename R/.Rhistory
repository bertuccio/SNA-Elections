install.packages("twitteR")
library(twitteR)
install.packages("curl")
install.packages("curl")
install.packages("curl")
install.packages("curl")
install.packages("httr")
install.packages("twitteR")
library(twitteR)
library(twitteR)
my.key <- "MOHxuriK7RtmEd2VA4XktoaT8"
my.secret <- "oAyS3o6kaU5HBBnL2lp7vt3QV1LrsPo5I4fO5ti2XFUTTndOEB"
cred <- OAuthFactory$new(consumerKey=my.key,
consumerSecret=my.secret,
requestURL='https://api.twitter.com/oauth/request_token',
accessURL='https://api.twitter.com/oauth/access_token',
authURL='https://api.twitter.com/oauth/authorize')
save(cred, file="twitter authentication.Rdata")
registerTwitterOAuth(cred)
library(twitteR)
consumer_key <- "MOHxuriK7RtmEd2VA4XktoaT8"
consumer_secret <- "oAyS3o6kaU5HBBnL2lp7vt3QV1LrsPo5I4fO5ti2XFUTTndOEB"
access_token <- "pOQdTLv3hpgFDnJ8raAvHTowAr7VAu2rOHVFzxw"
access_secret <- "3YdrBubYz1gV5bXhsn21Qo5zqOEil6GVuVn3IBsOww6Y7"
cred <- setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
cred <- setup_twitter_oauth(consumer_key, consumer_secret)
setup_twitter_oauth(consumer_key, consumer_secret)
cred <- setup_twitter_oauth(consumer_key, consumer_secret)
install.packages("httpuv")
cred <- setup_twitter_oauth(consumer_key, consumer_secret)
install.packages("ROAuth")
cred <- OAuthFactory$new(consumerKey=consumer_key,
consumerSecret=consumer_secret,
requestURL='https://api.twitter.com/oauth/request_token',
accessURL='https://api.twitter.com/oauth/access_token',
authURL='https://api.twitter.com/oauth/authorize')
library(ROAuth)
cred <- OAuthFactory$new(consumerKey=consumer_key,
consumerSecret=consumer_secret,
requestURL='https://api.twitter.com/oauth/request_token',
accessURL='https://api.twitter.com/oauth/access_token',
authURL='https://api.twitter.com/oauth/authorize')
save(cred, file="twitter authentication.Rdata")
registerTwitterOAuth(cred)
search.string <- "#nba"
no.of.tweets <- 100
tweets <- searchTwitter(search.string, n=no.of.tweets, cainfo="cacert.pem", lang="en")
tweets
registerTwitterOAuth(cred)
cred <- setup_twitter_oauth(consumer_key, consumer_secret)
cred <- setup_twitter_oauth(consumer_key, consumer_secret)
cred <- setup_twitter_oauth(consumer_key, consumer_secret)
cred <- setup_twitter_oauth(consumer_key, consumer_secret)
cred <- setup_twitter_oauth(consumer_key, consumer_secret)
r_stats <- searchTwitter("#Rstats", n=15)
head( r_stats )
r_stats[1]
r_stats[1]$text
r_stats$text
rstats
r_stats
r_stat[[1]]
r_stats[[1]]
r_stats[[1]]$screenName
r_stats[[1]]$retweeted
r_stats[[1]]$isRetweet
r_stats[[1]]$getId()
r_stats[[1]]$getRetweets()
r_stats[[1]]$getRetweeted()
r_stats[[2]]
r_stats[[3]]
r_stats[[3]]$getRetweets()
r_stats[[3]]$getIsRetweet()
r_stats[[3]]$getRetweeted()
r_stats[[3]]$getRetweeters()
r_stats[[3]]$retweeted
r_stats[[3]]$`.->retweeted`
ace/SNAElections/nodes.csv", header = FALSE, sep = ",")
df1 <- read.table("/home/pinwi/workspace/SNAElections/geo.csv", header = FALSE, sep = ",")
df1 <- read.table("/home/pinwi/workspace/SNAElections/geo.csv", header = FALSE, sep = ",")
df1 <- read.table("/home/pinwi/workspace/SNAElections/nodes.csv", header = FALSE, sep = ",")
df2 <- read.table("/home/pinwi/workspace/SNAElections/geo.csv", header = FALSE, sep = ",")
df1 <- read.table("/home/pinwi/workspace/SNAElections/nodes.csv", header = TRUE, sep = ",")
df2 <- read.table("/home/pinwi/workspace/SNAElections/geo.csv", header = TRUE, sep = ",")
df1 <- read.table("/home/pinwi/workspace/SNAElections/nodes.csv", header = FALSE, sep = ",")
df2 <- read.table("/home/pinwi/workspace/SNAElections/geo.csv", header = TRUE, sep = ",")
colnames(df1) <- c("screen_name","class"
)
df3 <- merge(x = df1, y = df2, by = "screen_name", all.x = TRUE)
View(df3)
df3 <- merge(x = df1, y = df2, by = "screen_name", all.y = TRUE)
View(df3)
write.csv(file = "geo2.csv",x = df3, sep = ",", fileEncoding = "UTF-8")
write.csv(file = "geo2.csv",x = df3, sep = ",", fileEncoding = "UTF-8",row.names=FALSE)
install.packages("doBy")
install.packages("tm")
install.packages("SnowballC")
install.packages("RColorBrewer")
install.packages("plyr")
install.packages("ggplot2")
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
library("irlba")
library("plyr")
library(ggplot2)
library(doBy)
library(tm)
library(SnowballC)
library(wordcloud)
library(RColorBrewer)
library(irlba)
library(plyr)
library(ggplot2)
library(doBy)
install.packages("wordcloud")
install.packages("slam")
install.packages("doBy")
install.packages('slam')
packageurl <- "http://cran.r-project.org/src/contrib/Archive/slam/slam_3.1.1.tar.gz"
install.packages(packageurl, contriburl=NULL, type="source")
version
install.packages("wordcloud2")
library(wordcloud2)
tweets_text <- read.csv("resources/tweets_out.csv",sep = ",")
library(tm)
install.packages("tm")
install.packages("tm")
setwd("/home/pinwi/workspace/SNAElections")
tweets_text <- read.csv("../resources/tweets_out.csv",sep = ",")
setwd("/home/pinwi/workspace/SNAElections/R/")
tweets_text <- read.csv("../resources/tweets_out.csv",sep = ",")
setwd("/home/pinwi/workspace/SNAElections/R/")
tweets_text <- read.csv("../resources/tweets_out.csv",sep = ",")
clean.text = function(txtclean)
{
# remueve retweets
txtclean = gsub("(RT|via)((?:\\b\\W*@\\w+)+)", " ", txtclean)
# remove @otragente
txtclean = gsub("@\\w+", " ", txtclean)
#remueve hashtags
txtclean = gsub("#\\S+", " ", txtclean)
# remueve links
txtclean = gsub("htt\\S+", " ", txtclean)
# remueve simbolos de puntuacion
txtclean = gsub("\\n", " ", txtclean,fixed = TRUE)
# remueve simbolos de puntuacion
txtclean = gsub("\\r", " ", txtclean,fixed = TRUE)
# remueve simbolos de puntuacion
txtclean = gsub("\\t", " ", txtclean,fixed = TRUE)
txtclean = gsub("[^[:alnum:][:space:]']", " ", txtclean)
# remove numeros
txtclean = gsub("[[:digit:]]", " ", txtclean)
# remove blank spaces at the beginning
txtclean = gsub("^ ", "", txtclean)
# remove blank spaces at the end
txtclean = gsub(" $", "", txtclean)
return(txtclean)
}
tweets_text = clean.text(tweets_text$text)
tweets_text <- read.csv("../resources/tweets_out.csv",sep = ",",fileEncoding = "UTF-8")
tweets_text <- read.csv("../resources/tweets_out.csv",sep = "," ,fileEncoding = "UTF-8")
tweets_text = clean.text(tweets_text$text)
resources
tweets_text <- read.csv("../resources/tweets_out.csv",sep = "," ,fileEncoding = "UTF-8")
tweets_text <- read.csv("../resources/tweets_out.csv",sep = ",")
tweets_text <- read.csv("../resources/tweets_out.csv",sep = ",")
tweets_text = clean.text(tweets_text$text)
corpus = Corpus(VectorSource(tweets_text))
library(tm)
